{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\_LEARNING\\\\demo-web-sockets\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\nfunction App() {\n  _s();\n\n  const [response, setResponse] = useState(\"\");\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"NOTIFICATION\", data => {\n      setResponse(data);\n      console.log(\"Connected To Server\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"This is server response\" + response\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EwSunp3mKlAPh2RJzEcLl6pzGvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/_LEARNING/demo-web-sockets/client/src/App.js"],"names":["React","useState","useEffect","socketIOClient","ENDPOINT","App","response","setResponse","socket","on","data","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,MAAM,GAAGL,cAAc,CAACC,QAAD,CAA7B;AACAI,IAAAA,MAAM,CAACC,EAAP,CAAU,cAAV,EAA0BC,IAAI,IAAI;AAChCH,MAAAA,WAAW,CAACG,IAAD,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,cACG,4BAA4BN;AAD/B;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjBQD,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:5000\";\r\n\r\nfunction App() {\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"NOTIFICATION\", data => {\r\n      setResponse(data);\r\n      console.log(\"Connected To Server\")\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <p>\r\n      {\"This is server response\" + response}\r\n      {/* It's <time dateTime={response}>{response}</time> */}\r\n    </p>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}